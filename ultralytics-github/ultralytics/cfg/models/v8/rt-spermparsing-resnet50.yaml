# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8-seg instance segmentation model. For Usage examples see https://docs.ultralytics.com/tasks/segment

# Parameters
nc: 1 # number of classes
npc: 5
pretrained: resnet50
scales: # model compound scaling constants, i.e. 'model=yolov8n-seg.yaml' will call yolov8-seg.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]
  s: [0.33, 0.50, 1024]
  m: [0.67, 0.75, 768]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.25, 512]
  
# YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, ResNetLayer, [3, 64, 1, True, 1]] # 0-P1/2
  - [-1, 1, ResNetLayer, [64, 64, 1, False, 3]] # 1-P2/4
  - [-1, 1, ResNetLayer, [256, 128, 2, False, 4]] # 2-P3/8
  - [-1, 1, ResNetLayer, [512, 256, 2, False, 6]] # 3-P4/16
  - [-1, 1, ResNetLayer, [1024, 512, 2, False, 3]] # 4-P5/32
  
head:
  - [1, 1, FPNConv, [256, 256, 1, 1]] # 5
  - [2, 1, FPNConv, [512, 256, 1, 1]] # 6 
  - [3, 1, FPNConv, [1024, 256, 1, 1]] # 7
  - [4, 1, FPNConv, [2048, 256, 1, 1]] # 8
  
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  
  - [[-1, 7], 1, Addition, [1]] # cat backbone 10-P4
  
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  
  - [[-1, 6], 1, Addition, [1]] # cat backbone 12-P4

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 5], 1, Addition, [1]] # cat backbone 14-P3
  
  - [8, 1, FPNConv, [256, 256, 3, 1, 1]] # 15
  - [10, 1, FPNConv, [256, 256, 3, 1, 1]] # 16
  - [12, 1, FPNConv, [256, 256, 3, 1, 1]] # 17
  - [14, 1, FPNConv, [256, 256, 3, 1, 1]] # 18
  
  - [15, 1, MaxPool, [1, 2]]
  
  - [[-2, -3, -4, -5, -1], 1, ParsingPart, [nc, npc, 32, 256]]